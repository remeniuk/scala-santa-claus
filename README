THE SANTA CLAUS PROBLEM:

Santa Claus sleeps at the North pole until awakened by either all of the nine reindeer, or by a group of three out of ten elves. He
performs one of two indivisible actions:

       - If awakened by the group of reindeer, Santa harnesses them to a sleigh, delivers toys, and finally unharnesses the reindeer who
       then go on vacation.
       - If awakened by a group of elves, Santa shows them into his office, consults with them on toy R&D, and finally shows them
       out so they can return to work constructing toys.

A waiting group of reindeer must be served by Santa before a waiting group of elves. Since Santa's time is extremely valuable, marshalling
the reindeer or elves into a group must not be done by Santa.

SOLUTION 1:

The solution is based on stdlib Scala Actors: one actor per each Santa's helpers (elves and reindeer), one actor for Santa, and one more actor
for Santa's secretary that assembles groups of helpers, and sends them to Santa.

SOLUTION 2:

Based on Scala STM and stdlib Actors, and is very much influenced by the solution provided in "Beautiful Code" by Simon Peyton Jones (the only noticeable difference is that actors are used instead of threads as in Haskell).